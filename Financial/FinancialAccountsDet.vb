Public Class FinancialAccountsDet

    Sub New()

        InitializeComponent()
        ' This line of code is generated by Data Source Configuration Wizard

        ' This line of code is generated by Data Source Configuration Wizard
        ' Fill a SqlDataSource
        '  SqlDataSource1.Fill()
    End Sub

    Private Sub FinancialAccountsDet_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        'TODO: This line of code loads data into the 'CRMDataSet.CRMJobName' table. You can move, or remove it, as needed.
        '   Me.CRMJobNameTableAdapter.FillByAcc(Me.CRMDataSet.CRMTasksJobs, "-1")
        'TODO: This line of code loads data into the 'CRMDataSet.CRMTasks' table. You can move, or remove it, as needed.
        '   Me.CRMTasksTableAdapter.Fill(Me.CRMDataSet.CRMTasks)
        'TODO: This line of code loads data into the 'CRMDataSet.CRMTasks' table. You can move, or remove it, as needed.
        '   Me.CRMTasksTableAdapter.Fill(Me.CRMDataSet.CRMTasks)
        'TODO: This line of code loads data into the 'WizCountDataSet.Accounts1' table. You can move, or remove it, as needed.
        Me.Accounts1TableAdapter.Fill(Me.WizCountDataSet.Accounts1)

        DateEditTo.DateTime = CDate(DateTime.Now.ToString("yyyy-MM-dd 00:00:00.000"))
        DateEditFrom.DateTime = CDate(DateTime.Now.AddYears(-1).ToString("yyyy-MM-dd 00:00:00.000"))

        '  AccounStatment(CStr(Format(DateEditFrom.DateTime, "yyyy-MM-dd")), CStr(Format(DateEditTo.DateTime, "yyyy-MM-dd")))

        AccountKeyTextEdit.Select()
        LoadAccountJobs()
        CheckBox1.Checked = True
    End Sub

    Private Sub LoadAccountJobs()
        Dim sql As New SQLControl
        Dim SqlString As String
        SqlString = " Select * From CRMTasksJobs where AccountID ='" & AccountKeyTextEdit.Text & "'"
        sql.CRMRunQuery(SqlString)
        If sql.SQLDS.Tables(0).Rows.Count = 0 Then Exit Sub
        CRMJobNameGridControl.DataSource = sql.SQLDS.Tables(0)
    End Sub

    Private Sub GetDat(AccNo As String)
        Me.SqlDataSource1.Queries(0).Parameters(0).Value = AccountKeyTextEdit.Text
        Me.SqlDataSource1.Queries(1).Parameters(0).Value = AccountKeyTextEdit.Text

        SqlDataSource1.Fill()

    End Sub

    Private Sub AccountKeyTextEdit_EditValueChanged(sender As Object, e As EventArgs)
        GetDat(AccountKeyTextEdit.Text)
    End Sub

    Private Sub CostCodeTextEdit_EditValueChanged(sender As Object, e As EventArgs)
    End Sub

    Private Sub SimpleButton1_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub SimpleButton1_Click_1(sender As Object, e As EventArgs) Handles SimpleButton1.Click
        AccounStatment(CStr(Format(DateEditFrom.DateTime, "yyyy-MM-dd")), CStr(Format(DateEditTo.DateTime, "yyyy-MM-dd")))
        '    Me.CRMJobNameTableAdapter.FillByAcc(Me.CRMDataSet.CRMJobName, AccountKeyTextEdit.Text)
    End Sub

    Private Sub AccounStatment(FromDate As String, ToDate As String)
        Dim AccountStatmentss As String
        If CheckBox1.Checked = True Then
            AccountStatmentss = " SELECT     JVALUEDATE  AS ALIAS6F,    JREFERANCE  AS ALIAS8F,  JREF2  AS ALIAS9F,  JDESCRIPTION  AS ALIAS10F,   CASE JMDEBITCREDIT WHEN 1 THEN  JMSUF  ELSE 0 END AS ALIAS12F_DEB, CASE JMDEBITCREDIT WHEN 0 THEN  JMSUF  ELSE 0 END AS ALIAS12F_CR " _
                        & " ,  IsNull(SORTING, 999999999) AS SORTING   ,RPHSTRANSRETRIV. JMID  AS ALIAS2F  from RPHSTRANSRETRIV" _
                        & " LEFT JOIN [ALHUDA].[dbo].[ACCMATCHING] ON [ALHUDA].[dbo].  RPHSTRANSRETRIV.JMID = [ALHUDA].[dbo].  [ACCMATCHING] .JMID" _
                        & " WHERE          ( JMACCOUNTKEY = '" & AccountKeyTextEdit.Text & "'  AND ('" & ToDate & "' >= JVALUEDATE) AND ('" & FromDate & "' <= JVALUEDATE) AND ('12/31/2050' >= JDUEDATE) AND ('01/01/1980' <= JDUEDATE) AND ('12/31/2050' >= JDATF3) AND ('01/01/1980' <= JDATF3) AND (0 <> JMSUF) )  AND JTYPE<>1 AND JTYPE <>2 AND ((JSTATUS = 1 AND JTYPE<>1) OR (JSTATUS = 0 AND JTYPE=1)) AND ADUMI <> 3 " _
                        & "  order by  ISNULL([ACCMATCHING].SORTING*0,1)   ,ASORTGROUP ASC  , JMACCOUNTKEY ASC  , JVALUEDATE ASC  , RPHSTRANSRETRIV.JMID ASC   "
        Else
            AccountStatmentss = " SELECT     JVALUEDATE  AS ALIAS6F,    JREFERANCE  AS ALIAS8F,  JREF2  AS ALIAS9F,  JDESCRIPTION  AS ALIAS10F,   CASE JMDEBITCREDIT WHEN 1 THEN  JMSUF  ELSE 0 END AS ALIAS12F_DEB, CASE JMDEBITCREDIT WHEN 0 THEN  JMSUF  ELSE 0 END AS ALIAS12F_CR " _
                        & "   ,RPHSTRANSRETRIV. JMID  AS ALIAS2F  from RPHSTRANSRETRIV" _
                        & " WHERE          ( JMACCOUNTKEY = '" & AccountKeyTextEdit.Text & "'  AND ('" & ToDate & "' >= JVALUEDATE) AND ('" & FromDate & "' <= JVALUEDATE) AND ('12/31/2050' >= JDUEDATE) AND ('01/01/1980' <= JDUEDATE) AND ('12/31/2050' >= JDATF3) AND ('01/01/1980' <= JDATF3) AND (0 <> JMSUF) )  AND JTYPE<>1 AND JTYPE <>2 AND ((JSTATUS = 1 AND JTYPE<>1) OR (JSTATUS = 0 AND JTYPE=1)) AND ADUMI <> 3 " _
                        & " order by   JVALUEDATE ASC  , JMID ASC   "

        End If
        Dim DebitBalance = " SELECT   cast(  sum( JMSUF ) as decimal(10,2)) as Debit    " _
        & " from RPHSTRANSRETRIV" _
        & " WHERE   JMDEBITCREDIT=1 and       ( JMACCOUNTKEY = '" & AccountKeyTextEdit.Text & "'  AND ('" & FromDate & "' > JVALUEDATE)  AND ('12/31/2050' >= JDUEDATE) AND ('01/01/1980' <= JDUEDATE) AND ('12/31/2050' >= JDATF3) AND ('01/01/1980' <= JDATF3) AND (0 <> JMSUF) )  AND JTYPE<>1 AND JTYPE <>2 AND ((JSTATUS = 1 AND JTYPE<>1) OR (JSTATUS = 0 AND JTYPE=1)) AND ADUMI <> 3 "

        Dim CreditBalance = " SELECT   cast(  sum( JMSUF ) as decimal(10,2))  as Credit " _
        & " from RPHSTRANSRETRIV" _
        & " WHERE   JMDEBITCREDIT=0 and       ( JMACCOUNTKEY = '" & AccountKeyTextEdit.Text & "'  AND ('" & FromDate & "' > JVALUEDATE)  AND ('12/31/2050' >= JDUEDATE) AND ('01/01/1980' <= JDUEDATE) AND ('12/31/2050' >= JDATF3) AND ('01/01/1980' <= JDATF3) AND (0 <> JMSUF) )  AND JTYPE<>1 AND JTYPE <>2 AND ((JSTATUS = 1 AND JTYPE<>1) OR (JSTATUS = 0 AND JTYPE=1)) AND ADUMI <> 3 "

        Dim i As Integer
        Dim sql As New SQLControl
        sql.WizCountRunQuery(AccountStatmentss)

        GridControl2.DataSource = sql.SQLDS.Tables(0)
        '    TryCast(GridControl13.MainView, GridView).Columns(0).Caption = "التاريخ"
        '   TryCast(GridControl13.MainView, GridView).Columns(1).Caption = "سند 1"
        '   TryCast(GridControl13.MainView, GridView).Columns(2).Caption = "سند 2"
        '  TryCast(GridControl13.MainView, GridView).Columns(3).Caption = "البيان"
        '  TryCast(GridControl13.MainView, GridView).Columns(4).Caption = "مدين"
        ' TryCast(GridControl13.MainView, GridView).Columns(5).Caption = "دائن"

        Dim DebitBalanceString As String = "0", CreditBalanceString As String = "0"
        sql.WizCountRunQuery(DebitBalance)
        If Not IsDBNull(sql.SQLDS.Tables(0).Rows(i).Item("Debit")) Then DebitBalanceString = CType(sql.SQLDS.Tables(0).Rows(i).Item("Debit"), String)

        sql.WizCountRunQuery(CreditBalance)
        If Not IsDBNull(sql.SQLDS.Tables(0).Rows(i).Item("Credit")) Then CreditBalanceString = CType(sql.SQLDS.Tables(0).Rows(i).Item("Credit"), String)

        Dim DrBalance, CrBalance As Integer
        DrBalance = 0 : CrBalance = 0
        Dim Balance = CInt(DebitBalanceString) - CInt(CreditBalanceString)
        If Balance >= 0 Then DrBalance = Balance Else CrBalance = -1 * Balance

        GridView2.AddNewRow()
        Dim rowHandle As Integer = GridView2.GetRowHandle(GridView2.DataRowCount)
        If GridView2.IsNewItemRow(rowHandle) Then
            GridView2.SetRowCellValue(rowHandle, GridView2.Columns(0), FromDate)
            GridView2.SetRowCellValue(rowHandle, GridView2.Columns(1), 0)
            GridView2.SetRowCellValue(rowHandle, GridView2.Columns(2), 0)
            GridView2.SetRowCellValue(rowHandle, GridView2.Columns(3), "رصيد مدور")
            GridView2.SetRowCellValue(rowHandle, GridView2.Columns(4), DrBalance)
            GridView2.SetRowCellValue(rowHandle, GridView2.Columns(5), CrBalance)
            GridView2.SetRowCellValue(rowHandle, GridView2.Columns(6), 0)
        End If

        If GridView2.Columns.Count = 9 Then
            If CheckBox1.Checked = True Then
                GridView2.Columns("SORTING").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            Else
                GridView2.Columns("ALIAS6F").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            End If

            GridView2.UpdateCurrentRow()
        Else

            If CheckBox1.Checked = True Then
                GridView2.Columns("SORTING").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            Else
                GridView2.Columns("ALIAS6F").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            End If

            GridView2.UpdateCurrentRow()
            OptimizeGrid()
        End If

    End Sub

    Public Sub OptimizeGrid()
        Dim col As DevExpress.XtraGrid.Columns.GridColumn = GridView2.Columns.AddField("colRunningBalance")
        col.UnboundType = DevExpress.Data.UnboundColumnType.Decimal
        col.VisibleIndex = 7
        col.Caption = "الرصيد"
        col.DisplayFormat.FormatType = DevExpress.Utils.FormatType.Custom
        col.DisplayFormat.FormatString = "{0:#,##0.00}"
        col.Visible = True
    End Sub

    Private Sub GridView2_CustomUnboundColumnData(sender As Object, e As DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs) Handles GridView2.CustomUnboundColumnData

        Try

            Dim view As DevExpress.XtraGrid.Views.Grid.GridView = TryCast(sender, DevExpress.XtraGrid.Views.Grid.GridView)

            If e.Column.FieldName = "colRunningBalance" Then
                If e.IsGetData Then
                    Dim total As Decimal = 0
                    Dim rHandle As Integer = view.GetRowHandle(e.ListSourceRowIndex)

                    For i As Integer = -1 To (rHandle - 1)
                        total -= Convert.ToDecimal(view.GetRowCellValue(i + 1, "ALIAS12F_DEB"))
                        total += Convert.ToDecimal(view.GetRowCellValue(i + 1, "ALIAS12F_CR"))
                    Next

                    e.Value = total
                End If
            End If

            If CheckBox1.Checked = True Then
                GridView2.Columns("SORTING").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            Else
                GridView2.Columns("ALIAS6F").SortOrder = DevExpress.Data.ColumnSortOrder.Ascending
            End If
        Catch ex As Exception
            '  MsgBox(ex.ToString)
        End Try

    End Sub

    Private Sub GridControl2_DoubleClick(sender As Object, e As EventArgs) Handles GridControl2.DoubleClick
        Dim Ref2 As Integer = CInt(GridView2.GetRowCellValue(GridView2.FocusedRowHandle, "ALIAS9F"))
        Dim TransDAte As Date = CDate(GridView2.GetRowCellValue(GridView2.FocusedRowHandle, "ALIAS6F"))
        My.Forms.FinancialTransDet.SqlDataSource1.Queries(0).Parameters(0).Value = Ref2
        My.Forms.FinancialTransDet.SqlDataSource1.Queries(0).Parameters(1).Value = TransDAte
        My.Forms.FinancialTransDet.SqlDataSource1.Fill()
        FinancialTransDet.Show()
    End Sub

    Private Sub AccountKeyTextEdit_EditValueChanged_1(sender As Object, e As EventArgs) Handles AccountKeyTextEdit.EditValueChanged
        GetDat(AccountKeyTextEdit.Text)
    End Sub

    Private Sub GridControl2_Click(sender As Object, e As EventArgs) Handles GridControl2.Click

    End Sub

    Private Sub AccountKeyTextEdit_Leave(sender As Object, e As EventArgs) Handles AccountKeyTextEdit.Leave
        GetDat(AccountKeyTextEdit.Text)
    End Sub
End Class